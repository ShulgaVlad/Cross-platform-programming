using System;
using Xunit;
using System.IO;
using Lab2;

public class LargestShipTests
{
    int testnum = 0;
    // Функція для запуску методу Main з тестовими файлами
    private void RunTest(string inputData, string expectedOutput)
    {
        // Записуємо тестовий вхід в файл INPUT.TXT
        File.WriteAllText("../../../../Lab2/INPUT.txt", inputData);

        // Викликаємо основну програму
        LargestShip.Main(new string[0]);

        // Читаємо результат з OUTPUT.TXT
        string result = File.ReadAllText("../../../../Lab2/OUTPUT.txt").Trim();

        // Порівнюємо результат з очікуваним значенням
        Assert.Equal(expectedOutput, result);
        Console.WriteLine($"Test number {testnum} \nExpexted result: {expectedOutput} \nActual result: {result}");
    }

    [Fact]
    public void Test_SimpleScenario()
    {
        testnum = 2;
        string inputData = "8 7 3\n1 1 2 2\n3 5 3 7\n4 2 4 3";
        string expectedOutput = "21";
        RunTest(inputData, expectedOutput);
    }

    [Fact]
    public void Test_OneShip()
    {
        testnum = 4;
        string inputData = "5 5 1\n1 1 1 1";
        string expectedOutput = "15";  // Найбільший можливий корабель займає решту клітин
        RunTest(inputData, expectedOutput);
    }

    [Fact]
    public void Test_FullBlock()
    {
        testnum = 1;
        string inputData = "3 3 1\n1 1 3 3";
        string expectedOutput = "0";  // Всі клітинки зайняті, тому новий корабель не можна розмістити
        RunTest(inputData, expectedOutput);
    }

    [Fact]
    public void Test_EmptyField()
    {
        testnum = 3;
        string inputData = "4 4 0";
        string expectedOutput = "16";  // Немає кораблів, максимальний можливий корабель — 16 клітинок
        RunTest(inputData, expectedOutput);
    }

    [Fact]
    public void Test_MultipleSmallShips()
    {
        testnum = 5;
        string inputData = "6 6 2\n1 1 2 2\n5 5 6 6";
        string expectedOutput = "9";  // Вільний простір у центрі дозволяє розмістити корабель розміром 12 клітинок
        RunTest(inputData, expectedOutput);
    }
}
